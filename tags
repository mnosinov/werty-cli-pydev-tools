	Session.vim	/^nnoremap  :Rg$/;"	m
	Session.vim	/^nnoremap  $/;"	m
		Session.vim	/^inoremap <expr> 	 pumvisible() ? "\\" : "\\	"$/;"	m
	Session.vim	/^nnoremap   za$/;"	m
	Session.vim	/^nnoremap  $/;"	m
	Session.vim	/^nnoremap  $/;"	m
	Session.vim	/^nnoremap $/;"	m
	Session.vim	/^nnoremap <silent>  :CtrlP$/;"	m
	Session.vim	/^imap  :wa$/;"	m
	Session.vim	/^nmap  :wa$/;"	m
<	Session.vim	/^lnoremap <buffer> < –ë$/;"	m
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
"	Session.vim	/^lnoremap <buffer> " –≠$/;"	m
#	Session.vim	/^lnoremap <buffer> # ‚Ññ$/;"	m
$	Session.vim	/^lnoremap <buffer> $ ;$/;"	m
%	Session.vim	/^nmap <silent> % <Plug>(MatchitNormalForward)$/;"	m
%	Session.vim	/^omap <silent> % <Plug>(MatchitOperationForward)$/;"	m
&	Session.vim	/^lnoremap <buffer> & ?$/;"	m
'	Session.vim	/^lnoremap <buffer> ' —ç$/;"	m
,	Session.vim	/^lnoremap <buffer> , –±$/;"	m
,,	Session.vim	/^nmap ,, <Plug>(emmet-expand-abbr)$/;"	m
,/	Session.vim	/^nmap ,\/ <Plug>(emmet-toggle-comment)$/;"	m
,;	Session.vim	/^nmap ,; <Plug>(emmet-expand-word)$/;"	m
,A	Session.vim	/^nmap ,A <Plug>(emmet-anchorize-summary)$/;"	m
,D	Session.vim	/^nmap ,D <Plug>(emmet-balance-tag-outword)$/;"	m
,I	Session.vim	/^nmap ,I <Plug>(emmet-image-encode)$/;"	m
,N	Session.vim	/^nmap ,N <Plug>(emmet-move-prev)$/;"	m
,a	Session.vim	/^nmap ,a <Plug>(emmet-anchorize-url)$/;"	m
,d	Session.vim	/^nmap ,d <Plug>(emmet-balance-tag-inward)$/;"	m
,i	Session.vim	/^nmap ,i <Plug>(emmet-image-size)$/;"	m
,j	Session.vim	/^nmap ,j <Plug>(emmet-split-join-tag)$/;"	m
,k	Session.vim	/^nmap ,k <Plug>(emmet-remove-tag)$/;"	m
,m	Session.vim	/^nmap ,m <Plug>(emmet-merge-lines)$/;"	m
,n	Session.vim	/^nmap ,n <Plug>(emmet-move-next)$/;"	m
,u	Session.vim	/^nmap ,u <Plug>(emmet-update-tag)$/;"	m
.	Session.vim	/^lnoremap <buffer> . —é$/;"	m
/	Session.vim	/^lnoremap <buffer> \/ .$/;"	m
0131|	Session.vim	/^normal! 0131|$/;"	m
:	Session.vim	/^lnoremap <buffer> : –ñ$/;"	m
;	Session.vim	/^lnoremap <buffer> ; –∂$/;"	m
<C-G>	Session.vim	/^nnoremap <C-G> :Rg$/;"	m
<C-H>	Session.vim	/^nnoremap <C-H> $/;"	m
<C-J>	Session.vim	/^nnoremap <C-J> <NL>$/;"	m
<C-K>	Session.vim	/^nnoremap <C-K> $/;"	m
<C-L>	Session.vim	/^nnoremap <C-L> $/;"	m
<C-P>	Session.vim	/^nnoremap <silent> <C-P> :CtrlP$/;"	m
<C-S>	Session.vim	/^imap <C-S> :wa$/;"	m
<C-S>	Session.vim	/^nmap <C-S> :wa$/;"	m
<Down>	Session.vim	/^inoremap <expr> <Down> pumvisible() ? "\\" : "\\<Down>"$/;"	m
<F10>	Session.vim	/^inoremap <F10>  :bnext$/;"	m
<F10>	Session.vim	/^nnoremap <F10> :bnext$/;"	m
<F11>	Session.vim	/^inoremap <F11>  :b #$/;"	m
<F11>	Session.vim	/^nnoremap <F11> :b #$/;"	m
<F12>	Session.vim	/^inoremap <F12>  :NERDTreeToggle$/;"	m
<F12>	Session.vim	/^nnoremap <F12> :NERDTreeToggle$/;"	m
<F2>	Session.vim	/^inoremap <F2>  :CtrlPMRU$/;"	m
<F2>	Session.vim	/^nnoremap <F2> :CtrlPMRU$/;"	m
<F3>	Session.vim	/^inoremap <F3>  :CtrlPBuffer$/;"	m
<F3>	Session.vim	/^nnoremap <F3> :CtrlPBuffer$/;"	m
<F5>	Session.vim	/^nnoremap <F5> :so $VIMRUNTIME\/syntax\/hitest.vim$/;"	m
<F8>	Session.vim	/^imap <F8>  :TagbarToggle$/;"	m
<F8>	Session.vim	/^nmap <F8> :TagbarToggle$/;"	m
<F9>	Session.vim	/^inoremap <F9>  :bprevious$/;"	m
<F9>	Session.vim	/^nnoremap <F9> :bprevious$/;"	m
<NL>	Session.vim	/^nnoremap <NL> <NL>$/;"	m
<Nul>	Session.vim	/^imap <Nul> <C-Space>$/;"	m
<Plug>(MatchitNormalBackward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalBackward) :call matchit#Match_wrapper('',0,'n')$/;"	m
<Plug>(MatchitNormalForward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalForward) :call matchit#Match_wrapper('',1,'n')$/;"	m
<Plug>(MatchitNormalMultiBackward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiBackward) :call matchit#MultiMatch("bW", "n")$/;"	m
<Plug>(MatchitNormalMultiForward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiForward) :call matchit#MultiMatch("W",  "n")$/;"	m
<Plug>(MatchitOperationBackward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationBackward) :call matchit#Match_wrapper('',0,'o')$/;"	m
<Plug>(MatchitOperationForward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationForward) :call matchit#Match_wrapper('',1,'o')$/;"	m
<Plug>(MatchitOperationMultiBackward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiBackward) :call matchit#MultiMatch("bW", "o")$/;"	m
<Plug>(MatchitOperationMultiForward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiForward) :call matchit#MultiMatch("W",  "o")$/;"	m
<Plug>(YCMFindSymbolInDocument)	Session.vim	/^nnoremap <silent> <Plug>(YCMFindSymbolInDocument) :call youcompleteme#finder#FindSymbol( 'document' )$/;"	m
<Plug>(YCMFindSymbolInWorkspace)	Session.vim	/^nnoremap <silent> <Plug>(YCMFindSymbolInWorkspace) :call youcompleteme#finder#FindSymbol( 'workspace' )$/;"	m
<Plug>(emmet-anchorize-summary)	Session.vim	/^nnoremap <Plug>(emmet-anchorize-summary) :call emmet#anchorizeURL(1)$/;"	m
<Plug>(emmet-anchorize-url)	Session.vim	/^nnoremap <Plug>(emmet-anchorize-url) :call emmet#anchorizeURL(0)$/;"	m
<Plug>(emmet-balance-tag-inward)	Session.vim	/^nnoremap <Plug>(emmet-balance-tag-inward) :call emmet#balanceTag(1)$/;"	m
<Plug>(emmet-balance-tag-outword)	Session.vim	/^nnoremap <Plug>(emmet-balance-tag-outword) :call emmet#balanceTag(-1)$/;"	m
<Plug>(emmet-expand-abbr)	Session.vim	/^nnoremap <Plug>(emmet-expand-abbr) :call emmet#expandAbbr(3,"")$/;"	m
<Plug>(emmet-expand-word)	Session.vim	/^nnoremap <Plug>(emmet-expand-word) :call emmet#expandAbbr(1,"")$/;"	m
<Plug>(emmet-image-encode)	Session.vim	/^nnoremap <Plug>(emmet-image-encode) :call emmet#imageEncode()$/;"	m
<Plug>(emmet-image-size)	Session.vim	/^nnoremap <Plug>(emmet-image-size) :call emmet#imageSize()$/;"	m
<Plug>(emmet-merge-lines)	Session.vim	/^nnoremap <Plug>(emmet-merge-lines) :call emmet#mergeLines()$/;"	m
<Plug>(emmet-move-next)	Session.vim	/^nnoremap <Plug>(emmet-move-next) :call emmet#moveNextPrev(0)$/;"	m
<Plug>(emmet-move-next-item)	Session.vim	/^nnoremap <Plug>(emmet-move-next-item) :call emmet#moveNextPrevItem(0)$/;"	m
<Plug>(emmet-move-prev)	Session.vim	/^nnoremap <Plug>(emmet-move-prev) :call emmet#moveNextPrev(1)$/;"	m
<Plug>(emmet-move-prev-item)	Session.vim	/^nnoremap <Plug>(emmet-move-prev-item) :call emmet#moveNextPrevItem(1)$/;"	m
<Plug>(emmet-remove-tag)	Session.vim	/^nnoremap <Plug>(emmet-remove-tag) :call emmet#removeTag()$/;"	m
<Plug>(emmet-split-join-tag)	Session.vim	/^nnoremap <Plug>(emmet-split-join-tag) :call emmet#splitJoinTag()$/;"	m
<Plug>(emmet-toggle-comment)	Session.vim	/^nnoremap <Plug>(emmet-toggle-comment) :call emmet#toggleComment()$/;"	m
<Plug>(emmet-update-tag)	Session.vim	/^nnoremap <Plug>(emmet-update-tag) :call emmet#updateTag()$/;"	m
<Plug>(fzf-complete-buffer-line)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<Plug>(fzf-complete-file)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-file) fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print | sed 's:^..::'")$/;"	m
<Plug>(fzf-complete-file-ag)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-file-ag) fzf#vim#complete#path('ag -l -g ""')$/;"	m
<Plug>(fzf-complete-line)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-line) fzf#vim#complete#line()$/;"	m
<Plug>(fzf-complete-path)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-path) fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print | sed '1d;s:^..::'")$/;"	m
<Plug>(fzf-complete-word)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-word) fzf#vim#complete#word()$/;"	m
<Plug>(fzf-insert)	Session.vim	/^nnoremap <silent> <Plug>(fzf-insert) i$/;"	m
<Plug>(fzf-maps-i)	Session.vim	/^inoremap <silent> <Plug>(fzf-maps-i) :call fzf#vim#maps('i', 0)$/;"	m
<Plug>(fzf-maps-n)	Session.vim	/^nnoremap <silent> <Plug>(fzf-maps-n) :call fzf#vim#maps('n', 0)$/;"	m
<Plug>(fzf-maps-o)	Session.vim	/^onoremap <silent> <Plug>(fzf-maps-o) :call fzf#vim#maps('o', 0)$/;"	m
<Plug>(fzf-normal)	Session.vim	/^nnoremap <silent> <Plug>(fzf-normal) <Nop>$/;"	m
<Plug>NetrwBrowseX	Session.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())$/;"	m
<Plug>NetrwBrowseXVis	Session.vim	/^vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()$/;"	m
<S-Tab>	Session.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\" : "\\<S-Tab>"$/;"	m
<SNR>113_:	Session.vim	/^nnoremap <SNR>113_: :=v:count ? v:count : ''$/;"	m
<Up>	Session.vim	/^inoremap <expr> <Up> pumvisible() ? "\\" : "\\<Up>"$/;"	m
>	Session.vim	/^lnoremap <buffer> > –Æ$/;"	m
?	Session.vim	/^lnoremap <buffer> ? ,$/;"	m
@	Session.vim	/^lnoremap <buffer> @ "$/;"	m
A	Session.vim	/^lnoremap <buffer> A –§$/;"	m
B	Session.vim	/^lnoremap <buffer> B –ò$/;"	m
C	Session.vim	/^lnoremap <buffer> C –°$/;"	m
D	Session.vim	/^lnoremap <buffer> D –í$/;"	m
E	Session.vim	/^lnoremap <buffer> E –£$/;"	m
F	Session.vim	/^lnoremap <buffer> F –ê$/;"	m
G	Session.vim	/^lnoremap <buffer> G –ü$/;"	m
H	Session.vim	/^lnoremap <buffer> H –†$/;"	m
HL	werty-tty_v1.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	werty-tty_v2.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	werty-tty_v3.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	werty-tty_v4.vim	/^function! s:HL(group, fg, ...)$/;"	f
I	Session.vim	/^lnoremap <buffer> I –®$/;"	m
J	Session.vim	/^lnoremap <buffer> J –û$/;"	m
K	Session.vim	/^lnoremap <buffer> K –õ$/;"	m
L	Session.vim	/^lnoremap <buffer> L –î$/;"	m
M	Session.vim	/^lnoremap <buffer> M –¨$/;"	m
MyClass	some_no_logic_test_py_files/test1.py	/^class MyClass(Exception: class):$/;"	c
N	Session.vim	/^lnoremap <buffer> N –¢$/;"	m
O	Session.vim	/^lnoremap <buffer> O –©$/;"	m
P	Session.vim	/^lnoremap <buffer> P –ó$/;"	m
Q	Session.vim	/^lnoremap <buffer> Q –ô$/;"	m
R	Session.vim	/^lnoremap <buffer> R –ö$/;"	m
S	Session.vim	/^lnoremap <buffer> S –´$/;"	m
SessionLoad	Session.vim	/^let SessionLoad = 1$/;"	v
SomeVeryLognFooClass	some_no_logic_test_py_files/test2.py	/^class SomeVeryLognFooClass:$/;"	c
T	Session.vim	/^lnoremap <buffer> T –ï$/;"	m
THIS_IS_CONSTANT	some_no_logic_test_py_files/test1.py	/^THIS_IS_CONSTANT = 122222$/;"	v
U	Session.vim	/^lnoremap <buffer> U –ì$/;"	m
V	Session.vim	/^lnoremap <buffer> V –ú$/;"	m
W	Session.vim	/^lnoremap <buffer> W –¶$/;"	m
X	Session.vim	/^lnoremap <buffer> X –ß$/;"	m
Y	Session.vim	/^lnoremap <buffer> Y –ù$/;"	m
Z	Session.vim	/^lnoremap <buffer> Z –Ø$/;"	m
[	Session.vim	/^lnoremap <buffer> [ —Ö$/;"	m
[%	Session.vim	/^nmap <silent> [% <Plug>(MatchitNormalMultiBackward)$/;"	m
[%	Session.vim	/^omap <silent> [% <Plug>(MatchitOperationMultiBackward)$/;"	m
\d	Session.vim	/^nnoremap \\d :YcmShowDetailedDiagnostic$/;"	m
\g	Session.vim	/^map \\g :YcmCompleter GoToDefinitionElseDeclaration$/;"	m
]	Session.vim	/^lnoremap <buffer> ] —ä$/;"	m
]%	Session.vim	/^nmap <silent> ]% <Plug>(MatchitNormalMultiForward)$/;"	m
]%	Session.vim	/^omap <silent> ]% <Plug>(MatchitOperationMultiForward)$/;"	m
^	Session.vim	/^lnoremap <buffer> ^ :$/;"	m
__init__	some_no_logic_test_py_files/test2.py	/^    def __init__(self: Foo):$/;"	m	class:SomeVeryLognFooClass
__str__	some_no_logic_test_py_files/test1.py	/^    def __str__(self, *args, **kwargs)->str:$/;"	m	class:MyClass	file:
`	Session.vim	/^lnoremap <buffer> ` —ë$/;"	m
a	Session.vim	/^lnoremap <buffer> a —Ñ$/;"	m
a	some_no_logic_test_py_files/test1.py	/^    a = myfunc()$/;"	v
a	some_no_logic_test_py_files/test1.py	/^a = 777$/;"	v
b	Session.vim	/^lnoremap <buffer> b –∏$/;"	m
bold	colortest.py	/^bold = "\\033[1;38;5;%sm"$/;"	v
c	Session.vim	/^lnoremap <buffer> c —Å$/;"	m
colored	colortest.py	/^colored = [0] + [0x5f + 40 * n for n in range(0, 5)]$/;"	v
colored_palette	colortest.py	/^colored_palette = [$/;"	v
d	Session.vim	/^lnoremap <buffer> d –≤$/;"	m
e	Session.vim	/^lnoremap <buffer> e —É$/;"	m
f	Session.vim	/^lnoremap <buffer> f –∞$/;"	m
f_fylonglongnamefunction	some_no_logic_test_py_files/test2.py	/^def f_fylonglongnamefunction(x):$/;"	f
g	Session.vim	/^lnoremap <buffer> g –ø$/;"	m
g%	Session.vim	/^nmap <silent> g% <Plug>(MatchitNormalBackward)$/;"	m
g%	Session.vim	/^omap <silent> g% <Plug>(MatchitOperationBackward)$/;"	m
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v1.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v2.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	badwolf_v3.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:colors_name	werty-tty_v1.vim	/^let g:colors_name="werty-tty"$/;"	v
g:colors_name	werty-tty_v2.vim	/^let g:colors_name="werty-tty"$/;"	v
g:colors_name	werty-tty_v3.vim	/^let g:colors_name="werty-tty"$/;"	v
g:colors_name	werty-tty_v4.vim	/^let g:colors_name="werty-tty"$/;"	v
grayscale	colortest.py	/^grayscale = [0x08 + 10 * n for n in range(0, 24)]$/;"	v
grayscale_palette	colortest.py	/^grayscale_palette = [$/;"	v
gx	Session.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
gx	Session.vim	/^vmap gx <Plug>NetrwBrowseXVis$/;"	m
h	Session.vim	/^lnoremap <buffer> h —Ä$/;"	m
hex	colortest.py	/^	hex   = (normal + "%s" + reset) % (i, color)$/;"	v
i	Session.vim	/^lnoremap <buffer> i —à$/;"	m
index	colortest.py	/^	index = (bold + "%4s" + reset) % (i, str(i) + ':')$/;"	v
j	Session.vim	/^lnoremap <buffer> j –æ$/;"	m
k	Session.vim	/^lnoremap <buffer> k –ª$/;"	m
l	Session.vim	/^lnoremap <buffer> l –¥$/;"	m
lightgreen	badwolf_v3.vim	/^	let lightgreen = 10$/;"	v
lightgreen	badwolf_v3.vim	/^	let lightgreen = 34$/;"	v
ls	Session.vim	/^cnoremap ls ls$/;"	m
m	Session.vim	/^lnoremap <buffer> m —å$/;"	m
makeSense	some_no_logic_test_py_files/test2.py	/^    def makeSense(self, whatever):$/;"	m	class:SomeVeryLognFooClass
measure_temp	raspi_scripts/cputemp.py	/^def measure_temp():$/;"	f
measure_voltage	raspi_scripts/cputemp.py	/^def measure_voltage():$/;"	f
mycl	some_no_logic_test_py_files/test1.py	/^    mycl = MyClass('my name')$/;"	v
myfunc	some_no_logic_test_py_files/test1.py	/^def myfunc(myvar: dict)->list:$/;"	f
n	Session.vim	/^lnoremap <buffer> n —Ç$/;"	m
normal	colortest.py	/^normal = "\\033[38;5;%sm" $/;"	v
o	Session.vim	/^lnoremap <buffer> o —â$/;"	m
p	Session.vim	/^lnoremap <buffer> p –∑$/;"	m
purple	badwolf_v3.vim	/^	let purple = 5$/;"	v
purple	badwolf_v3.vim	/^	let purple = 53$/;"	v
q	Session.vim	/^lnoremap <buffer> q –π$/;"	m
r	Session.vim	/^lnoremap <buffer> r –∫$/;"	m
r	some_no_logic_test_py_files/test1.py	/^        r = myfile.read()$/;"	v
reset	colortest.py	/^reset = "\\033[0m"$/;"	v
s	Session.vim	/^lnoremap <buffer> s —ã$/;"	m
s:I1	badwolf_v1.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 10  ] " blackestgravel & tardis$/;"	v
s:I1	badwolf_v2.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 3 , 10  ] " blackestgravel & tardis$/;"	v
s:I1	badwolf_v3.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , yellow , lightgreen  ] " blackestgravel & tardis$/;"	v
s:I2	badwolf_v1.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 3 , 238  ] " dirtyblonde    & facebook$/;"	v
s:I2	badwolf_v2.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 7 , 5  ] " dirtyblonde    & facebook$/;"	v
s:I2	badwolf_v3.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 7 , purple  ] " dirtyblonde    & facebook$/;"	v
s:I3	badwolf_v1.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 121  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	badwolf_v2.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 3  , 5 ] " tardis         & darkgravel$/;"	v
s:I3	badwolf_v3.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , yellow  , purple ] " tardis         & darkgravel$/;"	v
s:IA	badwolf_v1.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
s:IA	badwolf_v2.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
s:IA	badwolf_v3.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
s:N1	badwolf_v1.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 10 , 19 ] " blackestgravel & lime$/;"	v
s:N1	badwolf_v2.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 10 , 19 ] " blackestgravel & lime$/;"	v
s:N1	badwolf_v3.vim	/^let s:N1 = [ '#141413' , '#aeee00' , lightgreen , 19 ] " blackestgravel & lime$/;"	v
s:N2	badwolf_v1.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 3 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	badwolf_v2.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 7 , 5 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	badwolf_v3.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 7 , purple ] " dirtyblonde    & deepgravel$/;"	v
s:N3	badwolf_v1.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	badwolf_v2.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 3 , 5 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	badwolf_v3.vim	/^let s:N3 = [ '#8cffba' , '#242321' , yellow , purple ] " saltwatertaffy & darkgravel$/;"	v
s:N4	badwolf_v1.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	badwolf_v2.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	badwolf_v3.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:PA	badwolf_v1.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	badwolf_v2.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	badwolf_v3.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:RE	badwolf_v1.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	badwolf_v2.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	badwolf_v3.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:V1	badwolf_v1.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 182 ] " blackestgravel & orange$/;"	v
s:V1	badwolf_v2.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 14 , 182 ] " blackestgravel & orange$/;"	v
s:V1	badwolf_v3.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 14 , purple ] " blackestgravel & orange$/;"	v
s:V2	badwolf_v1.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 3 , 238 ] " coal           & dalespale$/;"	v
s:V2	badwolf_v2.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 7 , 5 ] " coal           & dalespale$/;"	v
s:V2	badwolf_v3.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 7 , purple ] " coal           & dalespale$/;"	v
s:V3	badwolf_v1.vim	/^let s:V3 = [ '#000000' , '#b88853' , 121 , 235 ] " coal           & toffee$/;"	v
s:V3	badwolf_v2.vim	/^let s:V3 = [ '#000000' , '#b88853' , 3 , 5 ] " coal           & toffee$/;"	v
s:V3	badwolf_v3.vim	/^let s:V3 = [ '#000000' , '#b88853' , yellow , purple ] " coal           & toffee$/;"	v
s:V4	badwolf_v1.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	badwolf_v2.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	badwolf_v3.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc = {}$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Black = ['000000', 0] $/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Blue = ['0000ff', 12] $/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.DarkCyan = ['ffff0f', 6]	"TODO adjust variations: 6(tty), 39(gui)$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.DarkGreen = ['008000', 2] 	"TODO adjust variations: 2(tty), 35(gui)$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Gray = ['808080', 243]$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.LightCyan = ['ffff0f', 'LightCyan']$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Lime = ['00ff00', 10] $/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Maroon = ['800000', 124]	"TODO adjust variations: 124(tty), 160(gui)$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Orange = ['008000', 142]	"TODO adjust variations: 142(tty), 214(gui)$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Purple = ['ff00ff', 13]$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Red = ['ff0000', 9]$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Silver = ['c0c0c0', 7] $/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.White = ['ffffff', 15]$/;"	v
s:bwc	werty-tty_v1.vim	/^let s:bwc.Yellow = ['ffff00', 'Yellow'] $/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc = {}$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Black = ['000000', 0] $/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Blue = ['0000ff', 12] $/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.DarkCyan = ['ffff0f', 6]	"TODO adjust variations: 6(tty), 39(gui)$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.DarkGreen = ['008000', 2] 	"TODO adjust variations: 2(tty), 35(gui)$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Gray = ['808080', 243]$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.LightCyan = ['ffff0f', 'LightCyan']$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Lime = ['00ff00', 10] $/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Maroon = ['800000', 124]	"TODO adjust variations: 124(tty), 160(gui)$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Orange = ['008000', 142]	"TODO adjust variations: 142(tty), 214(gui)$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Purple = ['ff00ff', 13]$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Red = ['ff0000', 9]$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Silver = ['c0c0c0', 7] $/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.White = ['ffffff', 15]$/;"	v
s:bwc	werty-tty_v2.vim	/^let s:bwc.Yellow = ['ffff00', 'Yellow'] $/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc = {}$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Black = ['000000', 0] $/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Blue = ['0000ff', 12] $/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.DarkCyan = ['ffff0f', 6]	"TODO adjust variations: 6(tty), 39(gui)$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.DarkGreen = ['008000', 2] 	"TODO adjust variations: 2(tty), 35(gui)$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Gray = ['808080', 243]$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.LightCyan = ['ffff0f', 'LightCyan']$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Lime = ['00ff00', 10] $/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Maroon = ['800000', 124]	"TODO adjust variations: 124(tty), 160(gui)$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Orange = ['008000', 142]	"TODO adjust variations: 142(tty), 214(gui)$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Purple = ['ff00ff', 13]$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Red = ['ff0000', 9]$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Silver = ['c0c0c0', 7] $/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.White = ['ffffff', 15]$/;"	v
s:bwc	werty-tty_v3.vim	/^let s:bwc.Yellow = ['ffff00', 'Yellow'] $/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.DarkCyan = ['ffff0f', 39]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.DarkCyan = ['ffff0f', 6]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.DarkGreen = ['008000', 2]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.DarkGreen = ['008000', 35]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.LightCyan = ['ffff0f', 'LightCyan']$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.LightCyan = ['ffff0f', 51]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.Maroon = ['800000', 124]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.Maroon = ['ff0000', 196]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.Orange = ['008000', 142]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.Orange = ['008000', 214]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.Silver = ['c0c0c0', 252]$/;"	v
s:bwc	werty-tty_v4.vim	/^	let s:bwc.Silver = ['c0c0c0', 7] $/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc = {}$/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Black = ['000000', 0] $/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Blue = ['0000ff', 12] $/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Gray = ['808080', 243]$/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Lime = ['00ff00', 10] $/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Purple = ['ff00ff', 13]$/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Red = ['ff0000', 9]$/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.White = ['ffffff', 15]$/;"	v
s:bwc	werty-tty_v4.vim	/^let s:bwc.Yellow = ['ffff00', 'Yellow'] $/;"	v
s:cpo_save	Session.vim	/^let s:cpo_save=&cpo$/;"	v
s:l	Session.vim	/^let s:l = 105 - ((43 * winheight(0) + 26) \/ 53)$/;"	v
s:so_save	Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
t	Session.vim	/^lnoremap <buffer> t –µ$/;"	m
u	Session.vim	/^lnoremap <buffer> u –≥$/;"	m
v	Session.vim	/^lnoremap <buffer> v –º$/;"	m
w	Session.vim	/^lnoremap <buffer> w —Ü$/;"	m
x	Session.vim	/^lnoremap <buffer> x —á$/;"	m
x	some_no_logic_test_py_files/test2.py	/^x = len('abc')$/;"	v
y	Session.vim	/^lnoremap <buffer> y –Ω$/;"	m
yellow	badwolf_v3.vim	/^	let yellow = 214$/;"	v
yellow	badwolf_v3.vim	/^	let yellow = 3$/;"	v
z	Session.vim	/^lnoremap <buffer> z —è$/;"	m
z	some_no_logic_test_py_files/test1.py	/^    z = [1,2,3,4]$/;"	v
zt	Session.vim	/^normal! zt$/;"	m
{	Session.vim	/^lnoremap <buffer> { –•$/;"	m
}	Session.vim	/^lnoremap <buffer> } –™$/;"	m
~	Session.vim	/^lnoremap <buffer> ~ –Å$/;"	m
